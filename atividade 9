#include <stdio.h>
#include <string.h>

#define MAX_PRODUTOS 100

typedef struct {
    char nome[50];
    float preco;
    int quantidade;
} Produto;

Produto estoque[MAX_PRODUTOS];
int total_produtos = 0;

void adicionar_produto() {
    Produto novo_produto;
    printf("Digite o nome do produto: ");
    scanf(" %[^\n]", novo_produto.nome);
    printf("Digite o preço do produto: ");
    scanf("%f", &novo_produto.preco);
    printf("Digite a quantidade do produto: ");
    scanf("%d", &novo_produto.quantidade);

    estoque[total_produtos] = novo_produto;
    total_produtos++;
}

void remover_produto() {
    char nome[50];
    int quantidade_vendida;
    printf("Digite o nome do produto vendido: ");
    scanf(" %[^\n]", nome);
    printf("Digite a quantidade vendida: ");
    scanf("%d", &quantidade_vendida);

    for (int i = 0; i < total_produtos; i++) {
        if (strcmp(estoque[i].nome, nome) == 0) {
            if (estoque[i].quantidade >= quantidade_vendida) {
                estoque[i].quantidade -= quantidade_vendida;
                if (estoque[i].quantidade == 0) {
                    for (int j = i; j < total_produtos - 1; j++) {
                        estoque[j] = estoque[j + 1];
                    }
                    total_produtos--;
                }
                return;
            } else {
                printf("Quantidade insuficiente em estoque.\n");
                return;
            }
        }
    }
    printf("Produto não encontrado.\n");
}

void exibir_estoque() {
    for (int i = 0; i < total_produtos; i++) {
        printf("Produto: %s, Preço: %.2f, Quantidade: %d\n", estoque[i].nome, estoque[i].preco, estoque[i].quantidade);
    }
}

int main() {
    int opcao;

    do {
        printf("\nMenu:\n");
        printf("1. Adicionar Produto\n");
        printf("2. Remover Produto\n");
        printf("3. Exibir Estoque\n");
        printf("4. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                adicionar_produto();
                break;
            case 2:
                remover_produto();
                break;
            case 3:
                exibir_estoque();
                break;
            case 4:
                break;
            default:
                printf("Opção inválida. Tente novamente.\n");
        }
    } while (opcao != 4);

    return 0;
}
